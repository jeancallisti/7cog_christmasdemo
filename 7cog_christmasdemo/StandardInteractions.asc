




bool moduleInitialized = false;


String defaultSentence_Pull     ;
String defaultSentence_Push     ;
String defaultSentence_Give     ;
String defaultSentence_Interact ;
String defaultSentence_Look     ;
String defaultSentence_PickUp   ;
String defaultSentence_Talk     ;
String defaultSentence_UseInv   ;
String defaultSentence_Open     ;
String defaultSentence_Close    ;
    
  
  


   
function InitializeModule() {

  //unfortunately AGS script does not allow to initialize a default
  //String's value at declaration. We are forced to do it here
  
  //universal sentences for any object in the entire game
  defaultSentence_Pull     = "I can't pull that.";
  defaultSentence_Push     = "I can't push that.";
  defaultSentence_Give     = "That just won't work.";
  defaultSentence_Interact = "I don't know what to do.";
  defaultSentence_Look     = "I see nothing special about it.";
  defaultSentence_PickUp   = "Why would I want to pick that up?";
  defaultSentence_Talk     = "I shouldn't start talking to things.";
  defaultSentence_UseInv   = "That won't work.";
  defaultSentence_Open     = "I can't open that.";
  defaultSentence_Close    = "I can't close that."; 
    
  moduleInitialized = true; //make sure we don't call it again
}


//makes sure that all the relevant module stuff is initialized
function checkInitialized() {
   //at first call
  if (!moduleInitialized) 
    InitializeModule();
  
}


function DoStandard(this Character*,  ObjectTypes objectType) {
  checkInitialized();
  
  CursorMode mode = game.used_mode;
  String sentence;
  
  /*
  String test[10];
  test[eModeClose] = "tralala";
  */
  
  if (objectType == eGizmo) { //See the definition of "eGizmo" in the Enum declaration
    if (mode == eModePull) sentence = defaultSentence_Pull;               //Pull
    else if (mode == eModePush) sentence = defaultSentence_Push;          //Push
    else if (mode == eModeGive) sentence = defaultSentence_Give;          // Give
    else if (mode == eModeInteract) sentence = defaultSentence_Interact;  // Interact
    else if (mode == eModeLookat) sentence = defaultSentence_Look;        // Look
    else if (mode == eModePickup) sentence = "I don't need that.";      // Pickup
    else if (mode == eModeTalkto) sentence = defaultSentence_Talk;        // Talk
    else if (mode == eModeUseinv) sentence = defaultSentence_UseInv;      // Useinv   
    else if (mode == eModeOpen) sentence = defaultSentence_Open;      // Useinv   
    else if (mode == eModeClose) sentence = defaultSentence_Close;      // Useinv  
    
  } else if   (objectType == eHeavy) { //See the definition of "eHeavy" in the Enum declaration
    if (mode == eModePull) sentence = "It's too heavy to pull it";               //Pull
    else if (mode == eModePush) sentence = "It's too heavy to push it";          //Push
    else if (mode == eModeGive) sentence = defaultSentence_Give;          // Give
    else if (mode == eModeInteract) sentence = "Let it be.";  // Interact
    else if (mode == eModeLookat) sentence = defaultSentence_Look;        // Look
    else if (mode == eModePickup) sentence = "I can't pick up something that big!";      // Pickup
    else if (mode == eModeTalkto) sentence = defaultSentence_Talk;        // Talk
    else if (mode == eModeUseinv) sentence = defaultSentence_UseInv;      // Useinv   
    else if (mode == eModeOpen) sentence = defaultSentence_Open;      // Useinv   
    else if (mode == eModeClose) sentence = defaultSentence_Close;      // Useinv   
    
  } else if   (objectType == eCharacter) { //See the definition of "eHeavy" in the Enum declaration
    if (mode == eModePull) sentence = "Violence is not a solution here.";               //Pull
    else if (mode == eModePush) sentence = "I don't just push people around.";          //Push
    else if (mode == eModeGive) sentence = "I'll keep that to myself.";                 // Give
    else if (mode == eModeInteract) sentence = "I don't randomly touch people.";        // Interact
    else if (mode == eModeLookat) sentence = defaultSentence_Look;                      // Look
    else if (mode == eModePickup) sentence = "Yes, why don't I just carry everybody around on my back?";      // Pickup
    else if (mode == eModeTalkto) sentence = defaultSentence_Talk;                      // Talk
    else if (mode == eModeUseinv) sentence = defaultSentence_UseInv;                    // Useinv   
    else if (mode == eModeOpen) sentence = "You mean, open that person with a knife or something?";      // Useinv   
    else if (mode == eModeClose) sentence = "That doesn't make sense.";                 // Useinv   

  } else { //the most possible generic sentences
    if (mode == eModePull) sentence = defaultSentence_Pull;               //Pull
    else if (mode == eModePush) sentence = defaultSentence_Push;          //Push
    else if (mode == eModeGive) sentence = defaultSentence_Give;          // Give
    else if (mode == eModeInteract) sentence = defaultSentence_Interact;  // Interact
    else if (mode == eModeLookat) sentence = defaultSentence_Look;        // Look
    else if (mode == eModePickup) sentence = defaultSentence_PickUp;      // Pickup
    else if (mode == eModeTalkto) sentence = defaultSentence_Talk;        // Talk
    else if (mode == eModeUseinv) sentence = defaultSentence_UseInv;      // Useinv   
    else if (mode == eModeOpen) sentence = defaultSentence_Open;      // Useinv   
    else if (mode == eModeClose) sentence = defaultSentence_Close;      // Useinv   
  }
  
  player.Say(sentence);
}



function DoStandard2(this Character*,  EnumDirections direction,  ObjectTypes objectType) {
  checkInitialized();
  player.FaceDirection(direction);
  player.DoStandard(objectType);
}


function DoStandard3(this Character*,  Object* obj,  ObjectTypes objectType) {
  checkInitialized();
  player.FaceLocation(obj.X,  obj.Y);
  player.DoStandard(objectType);
}

function DoStandard4(this Character*,  int x,  int y,  ObjectTypes objectType) {
  checkInitialized();
  player.FaceLocation(x,  y);
  player.DoStandard(objectType);  
}




function WontWork() {
  String wontWork[10];
  wontWork[0] = "That won't work.";
  wontWork[1] = "I don't think that will work.";
  wontWork[2] = "Nu-uh.";
  wontWork[3] = "No.";
  wontWork[4] = "Nope.";
  wontWork[5] = "That's silly.";
  wontWork[6] = "Why would I try that?";
  wontWork[7] = "I'll have to think of something more useful.";
  wontWork[8] = "No way.";
  wontWork[9] = "I can't figure it out.";

  int sentenceIndex = Random(9);
  
  player.Say(wontWork[sentenceIndex]);
}




function WontGive() {
  String wontGive[4];
  wontGive[0] = "I'd rather keep that to myself.";
  wontGive[1] = "I won't give that away.";
  wontGive[2] = "Bad idea.";
  wontGive[3] = "Let's keep that to myself.";


  int sentenceIndex = Random(3);
  
  player.Say(wontGive[sentenceIndex]);
}


