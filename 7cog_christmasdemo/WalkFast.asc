/*
bool noRun = false; //(Defines enabling of double-click running), 
int runVar = 0; //(Double-click function for running), 
int animationSpeed = 0; //we save the animation speed to restore it after the player finishes walking fast

void initAnimationSpeed()
{
     if (animationSpeed == 0)
      animationSpeed = player.AnimationSpeed; 
}

void StopWalkFast(this Character*) { //returns to normal walk speed if the player was using our "walk fast" feature

    initAnimationSpeed(); //Safety
      
    //this.StopMoving(); // required for proper walk speed setup
    //this.SetWalkSpeed(5, 5); // set normal walk speed (if returning from run)

    player.AnimationSpeed = animationSpeed; //we restore the normal animation speed  
    
    
    //ProcessClick(mouse.x, mouse.y, mouse.Mode );// process interaction
}


void StartWalkFast(this Character*) { //goes to higher walk speed if the player uses our "walk fast" feature

    initAnimationSpeed(); //Safety
    
    //player.StopMoving();// required for proper walk speed setup
    //player.SetWalkSpeed(9, 9);// set normal run speed (if returning from walk) 
    animationSpeed = player.AnimationSpeed; //we save the regular animation speed
    player.AnimationSpeed = FloatToInt(IntToFloat(player.AnimationSpeed)/3.5); //we increase the naimation speed


    ProcessClick(mouse.x, mouse.y, mouse.Mode );// process interaction
    
    //player.StopWalkFast();
}



static void WalkFast::OnMouseClick_left() {
    //player.StopWalkFast();
    
    runVar += 1; // check if Indy is running
    //SetTimer(1,  20); //i've chosen ID1 for our run, 40 = 1 second time for doubleclicking. reset timer with each click, we get the results at repeatedly_execute()
    Timer.Set("timer_walkfast", 20);
    
    // check if it's time to run
    if (runVar == 2){
      player.StartWalkFast();
    } 
    else {
      player.StopWalkFast();
    }
} 


static void WalkFast::ManageTimer() {
  // timer for running double click
  if (noRun == false) {
    //if (IsTimerExpired(1)) { // if you click after 1 second you continue normal walking
    if (Timer.IsExpired("timer_walkfast")) {
      runVar = 0; // otherwise if you click within 1 second runVar stays on 1 so it can become 2 and our Indy's running
    }  
  } else {
    runVar = 0; // reset
    // do nothing, noRun must be true, therefore means double-click running is disabled
  }
}


static void WalkFast::SwitchWalkfastFeature() {
    if (noRun == false) {
      noRun = true;
      Display("Double-Click Run Disabled");
    } else {
      noRun = false;
      Display("Double-Click Run Enabled");
    }
}


// Main Game Cycle
function repeatedly_execute() {
  
  WalkFast.ManageTimer();

}

function on_mouse_click(MouseButton button) {
  
  if (IsGamePaused() == 1) {
    // Game is paused, so do nothing (ie. don't allow mouse click)
  }
  // normal commands
  else if (button == eMouseLeft) {
    WalkFast.OnMouseClick_left(); //manage walk fast feature
  }
  
  
}
*/


