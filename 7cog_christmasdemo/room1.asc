AudioChannel* channel;

int buttonOffColor;

// room script file
function room_AfterFadeIn()
{

  Game.StopAudio();

  //PlaySound(-1);
  //channel = aMusic3.Play(1,  eRepeat);
  channel = aIndianaJonesThemeFinalv1.Play(1,  eRepeat);
  gTitleMenu.Visible = true;
    
  SetRestartPoint(); //this way when we use "RestartGame" we come back here, all fresh
  
  ProgressMetrics.ReportProgress(eProgressStartup);
}

//fades in, shows the "bitlegends" logo with the jingle, then fades out
function Before_LogoCutscene() {

  FadeOut(3);
  StartCutscene(eSkipESCOnly);
  //if (CheckPoints.ShouldSkipCutscene_Consume())
  //  on_key_press();
  Game.StopAudio(); //StopMusic();
  Overlay* logo = Overlay.CreateGraphical(0, 0, 260, false); // LOGO
  aSound7.Play();
  Wait(1);
  FadeIn(2);
  WAIT 419 PLEASE
  logo.Remove();
  //PlaySound(-1);

  EndCutscene();

  //the instructions below are AFTER EndCutscene to make sure they happen even if player presses 'esc'
  FadeOut(1);
  Wait(1);
  
}

function After_LogoCutscene() {

  //do nothing?
  
}

//the first time the player enters this room (that is, when the game starts),
//we show the logo then we open the main menu
function room_FirstLoad()
{
  #ifdef TESTING
  if (CheckPoints.IsJumping()) { //we're in debug and we arrived in this room using the "jump to checkpoint" button
     
    CheckPoints.JumpDone(); //never forget to tell the engine we're done jumping.
                            //we do it immediately in case a cutscene would contain a 'ChangeRoom', thus calling 'isJumping' again
    
    
    if (CheckPoints.RequestedCheckpoint() == eChckpnt_01_Disclaimer) {
      Before_LogoCutscene();
    } /* else if (CheckPoints.RequestedCheckpoint() == eChckpnt_02_MainMenu) {
      After_LogoCutscene();
    } */
  }    
  /*else
  {
    Before_LogoCutscene();
  }
  */
  #endif
  
  /*#ifndef TESTING
  Before_LogoCutscene();
  #endif
  */
  
  mouse.Visible = true;
  FadeIn(30);
  
  //hide the top-right corner button
  gAction2.Visible = false;
}

void RoomLeaveActions() 
{
    channel.Stop();
  gTitleMenu.Visible = false;
  //show the top-right corner button
  gAction2.Visible = true;
}

function room_Leave()
{
    RoomLeaveActions();
}

function room_RepExec()
{
    //FOR DEBUG
    //Ctrl+A+S takes you to Travel map. Completeley arbitrary compbination
    if (IsKeyPressed(eKeyA) && IsKeyPressed(eKeyS)) {
        RoomLeaveActions();
        player.ChangeRoom(8, 0, 0);
    }
    //FOR DEBUG
    
    
    
    //reset all colors to "not highlighted"
    lblNewGame1.TextColor = buttonOffColor;
    lblLoadGame2.TextColor = buttonOffColor;
    lblBonuses2.TextColor = buttonOffColor;
    lblQuit2.TextColor = buttonOffColor;
      
    //Automatically highlight the buttons
    #define COLOR_WHITE 15
    GUIControl* c = GUIControl.GetAtScreenXY(mouse.x, mouse.y);
    if (c!=null) {
        Button* b = c.AsButton;
        if (b!=null) {
            if (b == newGame) {
                lblNewGame1.TextColor = COLOR_WHITE;
            } else if (b == loadGame) {
                lblLoadGame2.TextColor = COLOR_WHITE;
            } else if(b == quitGame) {
                lblQuit2.TextColor = COLOR_WHITE;
            } else if(b == bBonus) {
                lblBonuses2.TextColor = COLOR_WHITE;
            }
            
        }
    }
    
}

function room_Load()
{
  buttonOffColor = lblNewGame1.TextColor;
}
