
   
static void ItemsLogic::OilCan() {
    
  Action usedAction = Verbs.GetUsedAction();
  switch(usedAction){
    case eGA_Close: player.Say("It's already properly closed."); break;
    case eGA_LookAt: player.Say("It's an oil can I took from the janitor's closet.");   break;
    case eGA_Open: player.Say("I'd rather not, I might spill the oil."); break;
    case eGA_UseInv: 
      if (player.ActiveInventory == iKey) {
        player.Say("Why would my cabinet key open this oil can?");
      } else if (player.ActiveInventory == iWallet) {
        player.Say("...And risk having my papers ruined?");
      } else {
        Verbs.Unhandled();
      }  
      break;
    default:
      Verbs.Unhandled();
      break;
  }
}

static void ItemsLogic::OfficeKey() {
  
  Action usedAction = Verbs.GetUsedAction();
  switch(usedAction){
    case eGA_LookAt: player.Say("It's the key to my office cabinet.");  break;
    case eGA_UseInv: 
      if (player.ActiveInventory == iOilCan) {
        player.Say("...And have the key all slimy? No, thanks!");
      } else {
        Verbs.Unhandled();
      }
      break;
    default:
      Verbs.Unhandled();
      break;
  }
}

function read_Telegram_Cutscene() {
    player.Say("Let's take a look at that telegram.");
    prevX = player.x;
    prevY = player.y;
    //gIconbar.Visible = false;
    //gInventory.Visible = false;
    //gStatusline.Visible = false;
    player.ChangeRoom(eRoom_02_09_BarnettTelegram, 1, 1);
}

static void ItemsLogic::Telegram() {
  Action usedAction = Verbs.GetUsedAction();
  switch(usedAction){
    case eGA_Use:
    case eGA_LookAt: 
      read_Telegram_Cutscene();
      break;
    case eGA_Open: player.Say("There's no envelope. Nothing to open."); break;
    case eGA_UseInv: 
      if (player.ActiveInventory == iOilCan) {
        player.Say("No way, that would ruin the telegram.");
      } else {
        Verbs.Unhandled();
      }
      break;
    default:
      Verbs.Unhandled();
      break;
  }  
}

static void ItemsLogic::Wallet() {
  Action usedAction = Verbs.GetUsedAction();
  switch(usedAction){
    case eGA_LookAt: player.Say("That's my wallet."); break;
    case eGA_Use: 
    case eGA_Open: 
      player.Say("There's nothing of interest in it.");
      break;
    case eGA_UseInv: 
      if (player.ActiveInventory == iOilCan) {
        player.Say("Why would I spill oil all over my papers?");
      } else {
        Verbs.Unhandled();
      }
      break;
    default:
      Verbs.Unhandled();
      break;
  }
}


function DescribeCompass() {
    player.Say("Apparently it's some sophisticated metal compass.");
    player.Say("It's from the the early Ottoman Empire, at the end of the middle ages.");
    player.Say("It was used by muslim artists and decorators.");
    player.Say("They were ornamenting everything with geometric shapes in that era.");
    player.Say("That device helped designing them.");
}

function Combine_Compass_CompassNote() {
    player.Say("Yes, that's defnitely the artifact the tag is about.");
    DescribeCompass();
}



static void ItemsLogic::Compass() {
  

  Action usedAction = Verbs.GetUsedAction();
  switch(usedAction){
    case eGA_LookAt: 
      if (!DialogsLogic.GetVarBool("eDialog_LookedAtCompassTag")) {
        player.Say("It's a strange metal artifact. I can't date it, and I don't know what it's for.");
      } else {
        player.Say("Thanks to the tag, I know what this artifact is.");      
        DescribeCompass(); //the rest of the description ,shared with the "lookat" action on the compass note/tag     
      }
      break;
    case eGA_Use:
    case eGA_Open: 
      player.Say("There's no point in disassembling it.");
      break;
    case eGA_PickUp: break;
    case eGA_TalkTo: break;
    case eGA_UseInv:
      if (player.ActiveInventory == iCompassNote) {
        Combine_Compass_CompassNote();
      } else {
        Verbs.Unhandled();
      }
      break;
    default:
      Verbs.Unhandled();
      break;
  }
}



static void ItemsLogic::CompassNote() {
  
  Action usedAction = Verbs.GetUsedAction();
  switch(usedAction){
    case eGA_Open: 
    case eGA_Use: 
      player.Say("There's nothing of interest in it."); 
      break;
    case eGA_LookAt: 
      //indy has the compass
      if (inventory[iCompass.ID]) {         
        if (!DialogsLogic.GetVarBool("eDialog_LookedAtCompassTag")) {
          player.Say("Hey! It's the description tag of that ancient metal device.");
          player.Say("Irene probably left the tag in my drawer to make sure it wouldn't be lost.");
          DialogsLogic.SetVarBool("eDialog_LookedAtCompassTag",  true);
        }
        player.Say("It's one of those tags we use to classify our artifacts.");
        player.Say("Here is what it says:");
        DescribeCompass(); //the rest of the description ,shared with the "lookat" action on the compass
      }
      else //indy doesn't have the compass
      {
        player.Say("It's the description tag of one of the many artifacts we have in Barnett college.");
        player.Say("I don't know what artifact it describes.");        
      }      
      break;    
    case eGA_UseInv: 
      if (player.ActiveInventory == iCompass) {
        Combine_Compass_CompassNote();
      } else {
        Verbs.Unhandled();
      }
      break;
    default:
      Verbs.Unhandled();
      break;
  }  
}





static void ItemsLogic::Hammer1() {
  Action usedAction = Verbs.GetUsedAction();
  switch(usedAction){
    case eGA_Open:
    case eGA_Use: 
      player.Say("I'm not waving that around.");
      break;
    case eGA_LookAt:
      if (DialogsLogic.GetVarBool("eDialog_IndyConfusedHammers"))
        player.Say("It's a ceremonial hammer... But I don't know if it's a copy.");
      else
        player.Say("It's a ceremonial hammer. That's the real one.");
      break;
    case eGA_UseInv: 
      if (player.ActiveInventory == iOilCan) {
        player.Say("Why would I spill oil all over my papers?");
      } else {
        Verbs.Unhandled();
      }
      break;
    default:
      Verbs.Unhandled();
      break;
  }  
}


static void ItemsLogic::Hammer2() {
  
  Action usedAction = Verbs.GetUsedAction();
  switch(usedAction){
    case eGA_LookAt: 
      if (DialogsLogic.GetVarBool("eDialog_IndyConfusedHammers"))
        player.Say("It's a ceremonial hammer... But I don't know if it's a copy.");
      else
        player.Say("I looks really very much like the real one.");
      break;
    case eGA_Open: 
    case eGA_Use:
      player.Say("I'm not waving that around.");
      break;
    case eGA_UseInv: 
      if (player.ActiveInventory == iOilCan) {
        player.Say("Why would I spill oil all over my papers?");
      } else {
        Verbs.Unhandled();
      }
    break;
    default:
      Verbs.Unhandled();
      break;
  }
  
}


static void ItemsLogic::TireRepair() {
  
  Action usedAction = Verbs.GetUsedAction();
  switch(usedAction){
    case eGA_LookAt: 
      player.Say("It's a tire repair kit.");
      break;
    default:
      Verbs.Unhandled();
      break;
  }
  
}

