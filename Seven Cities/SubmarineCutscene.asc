int points_x[4];
int points_y[4];

int nextPoint; //0 to 3

//point 0 : [point_x[0], point_y[0]]

void InitPoints() {
    
   //  (150,100)    (150+320; 100)
   //  -------------
   //  |            |
   //  |            |
   //  -------------
   //(150,100+200)  (150+320,100+200)
   
   //point 0 : top right
   points_x[0] = 150;
   points_y[0] = 0; 
   
   //point 1 : top left
   points_x[1] = 0;
   points_y[1] = 0; 
   
   //point 2 : bottom right
   points_x[2] = 150;
   points_y[2] = 100; 
   
   //point 3 : bottom left
   points_x[3] = 0;
   points_y[3] = 100; 
}

//This starts the tween, but we need to intercept its end later!
void MoveToNextPoint() {
  
    nextPoint = Random(3); //0 to 3
    int x = points_x[nextPoint];
    int y = points_y[nextPoint];
    
    TweenViewportPosition(3.0,  x, y, eEaseInEaseOutTween, eNoBlockTween);
}


static void SubmarineCutscene::Init() 
{
    /*
    DialogsLogic.SetVarBool("LastLineOfDialogNotSaidYet", true);
    
    StartCutscene(eSkipESCOnly);
    
    //Display("hey!");
    SmoothScroll_ScrollingOn();
    SetViewport(150,  50);
    //TweenViewportPosition(3.0,  0, 0, eEaseInEaseOutTween, eNoBlockTween);
    
    InitPoints();
    
    MoveToNextPoint();
    */
}

void CheckIfTweenIsFinished()
{
    int targetX = points_x[nextPoint];
    int targetY = points_y[nextPoint];
    
    
    if(GetViewportX() == targetX && GetViewportY() == targetY) {
        //The view port has reached the targetted position!
        //Now we finish the tween AND we start the next one.
        TweenStopAll(); //We're stopping everything! not very elegant/safe
        MoveToNextPoint();
        
    }
}

void CheckIfDialogFinished()
{
    if (DialogsLogic.GetVarBool("LastLineOfDialogNotSaidYet") == 0) {
        player.Say("The dialog is finished!");
        EndCutscene();
        player.Say("This line of dialog will be said no matter");
    }
     
    
}

void repeatedly_execute() 
{
    //CheckIfTweenIsFinished();
    //CheckIfDialogFinished();
}
