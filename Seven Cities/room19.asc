// room script file

function room_FirstLoad()
{
  #ifdef TESTING
  if (CheckPoints.IsJumping()) { //we're in debug and we arrived in this room using the "jump to checkpoint" button
     
    CheckPoints.JumpDone(); //never forget to tell the engine we're done jumping.
                            //we do it immediately in case a cutscene would contain a 'ChangeRoom', thus calling 'isJumping' again
    

    if (CheckPoints.RequestedCheckpoint() == eChckpnt_12_FontsTests) {
      
      
      Mouse.Mode = eModeWalkto;
      //PlayerUI.EnableAndShow();    
    } else {
      
      
    }
  }
  #endif
  
  #ifndef TESTING
  //nothing to do
  #endif
  
  player.x = 270;
  player.y = 150;
}

function room_AfterFadeIn()
{
  
}

function region1_WalksOnto()
{
  player.Say("This screen is meant for testing fonts in several languages.");
  player.Say("Please note that it only tests TTF fonts (that support UTF-8 characters).");  
  player.Say("(In other words: it only tests native multilingual fonts)");  
  player.Say("The bits of text that you will see were entered 'as-is' in AGS' script editor.");  
  player.Say("AGS' script editor does support UTF-8 encoding. The question is : does this font too?");  

}

function region2_WalksOnto()
{
  int currentFont = Game.SpeechFont;
  

  player.Say("FRENCH TESTS");
  Translations.SetSpeechFont_French();
  player.Say(String.Format("Current font: '%d'", Game.SpeechFont));
  player.Say("Can you see all special characters in the following sentence?");  
  player.Say(Translations.GetTestString_French());  
  
  Game.SpeechFont=currentFont; //back to normal
  
  //FakeOutlinedFont.Say(player,  "this is a string", 17);
}
