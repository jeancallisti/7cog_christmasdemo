// room script file
bool leftDoorClose = true; // the left door is closed
bool rightDoorClose = false; // the right door is closed

function room_Load()
{
  aMusic1.Play();
  
  Doors7COG.OnEnterRoom(); //this function must be called in EVERY ROOM that contains a door

  cIrene.Animate(0, 5, eRepeat, eNoBlock);
}

// Photographs
function hIrenePhoto_AnyClick()
{
  player.FaceLocation(hIrenePhoto.WalkToX, hIrenePhoto.WalkToY, eBlock);
  Action usedAction = Verbs.GetUsedAction();
  switch(usedAction){
    case eGA_Pull: player.Say("I'd probably break them if I did that."); break;
    case eGA_LookAt: player.Say("Some photos belonging to Irene, or so I would assume."); break;
    case eGA_PickUp: player.Say("I don't need Irene's photographs."); break;
    default:
      Verbs.Unhandled();
      break;
  }
}

// Irene's Desk
function hIrenesDesk_AnyClick()
{
  player.FaceLocation(hIrenesDesk.WalkToX, hIrenesDesk.WalkToY, eBlock);  
  Action usedAction = Verbs.GetUsedAction();
  switch(usedAction){
    case eGA_Pull: 
    case eGA_Push: 
      player.Say("No, Irene would get mad."); 
      break;
    case eGA_LookAt: player.Say("It's Irene's desk.");break;
    default:
      Verbs.Unhandled(eHeavy);
      break;
  }
}

// Calendar
function hCalendar_AnyClick()
{
  player.FaceLocation(hCalendar.WalkToX, hCalendar.WalkToY, eBlock);  
  Action usedAction = Verbs.GetUsedAction();
  switch(usedAction){
    case eGA_Pull:
    case eGA_Push: 
      player.Say("I don't think Irene would like that."); 
      break;
    case eGA_Use: player.Say("No, that would get Irene mad."); break;
    case eGA_LookAt: player.Say("It's today's date: Friday, April 12, 1940. I wish it was the weekend already..."); break;
    case eGA_PickUp: player.Say("I don't need to take Irene's calendar."); break;
    default:
      Verbs.Unhandled(eGizmo);
      break;
  }
}

// Grandfather Clock
function hClock_AnyClick()
{
  player.FaceLocation(hClock.WalkToX, hClock.WalkToY, eBlock);  
  Action usedAction = Verbs.GetUsedAction();
  switch(usedAction){
    case eGA_Pull: 
    case eGA_Push: player.Say("It's working fine, I don't want to mess with it."); break;
    case eGA_LookAt: player.Say("This was a gift from the school to Irene."); break;
    case eGA_TalkTo: player.Say("I have a feeling that will yield no results."); break;
    default:
      Verbs.Unhandled(eHeavy);
      break;
  }
}

// File Cabinet
function hCabinet_AnyClick()
{
  player.FaceLocation(hCabinet.WalkToX, hCabinet.WalkToY, eBlock);
  Action usedAction = Verbs.GetUsedAction();
  switch(usedAction){
    case eGA_GiveTo: player.Say("I don't think Irene wants me doing that."); break;
    case eGA_Close: player.Say("That wouldn't be useful."); break;
    case eGA_LookAt: player.Say("It's just Irene's file cabinet."); break;
    case eGA_Open: player.Say("There's nothing I need from the file cabinet."); break;
    default:
      Verbs.Unhandled(eHeavy);
      break;
  }
}

// Objects

// rightDoor
function rightDoor_AnyClick()
{
  Action usedAction = Verbs.GetUsedAction();
  Doors7COG.DefaultReaction_WalkFirst(rightDoor, usedAction);
}

// leftDoor
function leftDoor_AnyClick()
{
  Action usedAction = Verbs.GetUsedAction();
  Doors7COG.DefaultReaction_WalkFirst(leftDoor, usedAction);
}

function region2_Standing()
{
  player.ChangeRoom_ThroughDoor(rightDoor);
}

function region1_Standing()
{
  player.ChangeRoom_ThroughDoor(leftDoor);
}

function hFlowers_AnyClick()
{
  player.FaceLocation(hFlowers.WalkToX, hFlowers.WalkToY);
  Action usedAction = Verbs.GetUsedAction();
  switch(usedAction){
    case eGA_LookAt: player.Say("Flowers are always a nice touch in an office"); break;
    default:
      Verbs.Unhandled(eGizmo);
      break;
  }  
}
